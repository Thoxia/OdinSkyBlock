plugins {
    id 'java'
    id("io.github.goooler.shadow") version "8.1.7"
}

group = 'com.thoxia.odin'
version = '1.0.0'

allprojects {

    apply plugin: 'java'
    apply plugin: 'io.github.goooler.shadow'

    repositories {
        mavenCentral()
        maven {
            name = 'papermc-repo'
            url = 'https://repo.papermc.io/repository/maven-public/'
        }
        maven {
            name = 'sonatype'
            url = 'https://oss.sonatype.org/content/groups/public/'
        }
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok:1.18.30'
        annotationProcessor 'org.projectlombok:lombok:1.18.30'

        compileOnly 'io.papermc.paper:paper-api:1.19-R0.1-SNAPSHOT'
    }

    build {
        dependsOn shadowJar
    }
}

repositories {
    mavenCentral()
    maven {
        name = 'papermc-repo'
        url = 'https://repo.papermc.io/repository/maven-public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven { url 'https://jitpack.io' }
    maven { url 'https://repo.rapture.pw/repository/maven-snapshots/' }
    maven { url 'https://repo.triumphteam.dev/snapshots/' }
    maven { url 'https://maven.enginehub.org/repo/' }
    maven { url 'https://repo.xenondevs.xyz/releases' }
    maven { url 'https://repo.extendedclip.com/content/repositories/placeholderapi/' }
}

dependencies {

    implementation project(':api')

    implementation ("dev.triumphteam:triumph-cmd-bukkit:2.0.0-SNAPSHOT") { exclude group: "com.google.code.gson" }
    implementation "xyz.xenondevs.invui:invui:1.33"

    compileOnly 'com.sk89q.worldedit:worldedit-bukkit:7.2.13'

    compileOnly 'com.zaxxer:HikariCP:5.0.1'

    implementation 'fr.mrmicky:fastboard:2.1.3'

    compileOnly 'me.clip:placeholderapi:2.11.6'

}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
}

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"
tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

shadowJar {
    dependsOn(jar)

    archiveFileName = "OdinSkyBlock v${archiveVersion.get()}.jar"

    relocate 'xyz.xenondevs', 'com.thoxia.odin.skyblock.libraries.gui'
    relocate 'dev.triumphteam.cmd', 'com.thoxia.odin.skyblock.libraries.command'
    relocate 'fr.mrmicky.fastboard', 'com.thoxia.odin.skyblock.libraries.scoreboard'

    from sourceSets.getByName("main").output
    configurations = [project.configurations.getByName("runtimeClasspath")]

}

shadowJar.shouldRunAfter build